#!/usr/bin/env bash
# USAGE: gitlab-add-member
# DESCRIPTION: TODO
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# ==============================================================================
# CHECK ARGS
# ==============================================================================
if [[ $# -ne 2 ]]; then
	echo "Usage: $0 <group> <user>"
	echo "Example: $0 'my-group' 'my-user'"
	exit 1
fi


# ==============================================================================
# GROUP
# ==============================================================================
add_group="$1"
groups="$(gitlab-groups "$add_group")"

while read -r group; do
	current_group="$(echo "$group" | jq -r '.full_path')"
	[[ "$current_group" != "$add_group" ]] && continue
	group_id="$(echo "$group" | jq -r '.id')"
done <<< "$groups"

if [[ -z "$group_id" ]]; then
	echo "Group '$add_group' not found."
	exit 1
fi


# ==============================================================================
# USER
# ==============================================================================
add_user="$2"
users="$(gitlab-users "$add_user")"

while read -r user; do
	current_user="$(echo "$user" | jq -r '.username')"
	[[ "$current_user" != "$add_user" ]] && continue
	user_id="$(echo "$user" | jq -r '.id')"
	full_name="$(echo "$user" | jq -r '.name')"
done <<< "$users"

if [[ -z "$user_id" ]]; then
	echo "User '$add_user' not found."
	exit 1
fi


# ==============================================================================
# ADD MEMBER
# ==============================================================================
bold_red="\033[1;31m"
bold_yellow="\033[1;33m"
bold_blue="\033[1;34m"
reset="\033[0m"
echo -e "${bold_red}USER:  $full_name ($add_user)${reset}"
echo -e "${bold_red}GROUP: $add_group ($group_id)${reset}"
yesno "Add user to group?" || exit

access_level=30

result="$(gitlab-curl "groups/$group_id/members" --request POST --data "user_id=$user_id&access_level=$access_level")"
echo "$result"
echo "$result" | jq .

