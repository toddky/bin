#!/usr/bin/env ruby
# vim: ft=ruby

# ==============================================================================
# INPUTS
# ==============================================================================
loan = 100000

loan_rates = {
	# Years => Interest Rate
	7       => 3,
	10      => 3.35,
	15      => 3.75
}

monthly_budget = 1500


# ==============================================================================
# CALCULATIONS
# ==============================================================================

def calc_monthly(loan, years, rate)
	months = years * 12
	interest = 1 + (rate.to_f/100/12)
	monthly = loan / ((1-(1/(interest))**months)/(interest-1))
	return monthly
end


def calc_total(loan, rate, payment)
	interest = 1 + (rate.to_f/100/12)
	new_loan = loan * interest - payment

	# Loan paid off
	if new_loan < 0.01
		return payment

	# Bad input
	elsif new_loan > loan
		raise "interest rate too high or payment too low"
	end

	# Default case
	return payment + calc_total(new_loan, rate, payment)
end

monthlies = Hash.new
rows = Array.new
loan_rates.each do |years, rate|
	monthly = calc_monthly(loan, years, rate)
	monthlies[years] = monthly
	total = calc_total(loan, rate, monthly)
	interest = total - loan
	#rows.append([years, rate, monthly, 0, total, interest])
end

(monthlies.values + [monthly_budget]).each do |total_payment|
	loan_rates.each do |years, rate|
		monthly = monthlies[years]
		extra = total_payment - monthly
		next if extra < 0
		total = calc_total(loan, rate, total_payment)
		interest = total - loan
		rows.append([years, rate, monthly, extra, total, interest])
	end
end


# ==============================================================================
# PRINT
# ==============================================================================
def print_row(years, rate, monthly, extra, total, interest)
	printf("| %5d | %12.2f%% | $%07.2f | $%07.2f | $%09.2f | $%08.2f |\n", years, rate, monthly, extra, total, interest)
end

puts "| Years | Interest Rate |  Monthly |    Extra |      Total |  Interest |"
sorted_rows = rows.sort_by { |row| row[5] }
sorted_rows.each do |row|
	print_row(*row)
end

